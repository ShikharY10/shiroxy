// protoc --go_out=. ./cmd/shiroxy/domains/domain.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.12.4
// source: cmd/shiroxy/domains/domain.proto

package domains

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DomainMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status                string            `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Date                  string            `protobuf:"bytes,2,opt,name=date,proto3" json:"date,omitempty"`
	Domain                string            `protobuf:"bytes,3,opt,name=domain,proto3" json:"domain,omitempty"`
	Email                 string            `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	AcmeAccountPrivateKey []byte            `protobuf:"bytes,5,opt,name=acme_account_private_key,json=acmeAccountPrivateKey,proto3" json:"acme_account_private_key,omitempty"`
	CsrDer                []byte            `protobuf:"bytes,6,opt,name=csr_der,json=csrDer,proto3" json:"csr_der,omitempty"`
	CombinedCert          []byte            `protobuf:"bytes,7,opt,name=combined_cert,json=combinedCert,proto3" json:"combined_cert,omitempty"`
	CertPemBlock          []byte            `protobuf:"bytes,8,opt,name=cert_pem_block,json=certPemBlock,proto3" json:"cert_pem_block,omitempty"`
	KeyPemBlock           []byte            `protobuf:"bytes,9,opt,name=key_pem_block,json=keyPemBlock,proto3" json:"key_pem_block,omitempty"`
	DnsChallengeKey       string            `protobuf:"bytes,10,opt,name=dns_challenge_key,json=dnsChallengeKey,proto3" json:"dns_challenge_key,omitempty"`
	Metadata              map[string]string `protobuf:"bytes,11,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *DomainMetadata) Reset() {
	*x = DomainMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_shiroxy_domains_domain_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DomainMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DomainMetadata) ProtoMessage() {}

func (x *DomainMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_shiroxy_domains_domain_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DomainMetadata.ProtoReflect.Descriptor instead.
func (*DomainMetadata) Descriptor() ([]byte, []int) {
	return file_cmd_shiroxy_domains_domain_proto_rawDescGZIP(), []int{0}
}

func (x *DomainMetadata) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *DomainMetadata) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *DomainMetadata) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *DomainMetadata) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *DomainMetadata) GetAcmeAccountPrivateKey() []byte {
	if x != nil {
		return x.AcmeAccountPrivateKey
	}
	return nil
}

func (x *DomainMetadata) GetCsrDer() []byte {
	if x != nil {
		return x.CsrDer
	}
	return nil
}

func (x *DomainMetadata) GetCombinedCert() []byte {
	if x != nil {
		return x.CombinedCert
	}
	return nil
}

func (x *DomainMetadata) GetCertPemBlock() []byte {
	if x != nil {
		return x.CertPemBlock
	}
	return nil
}

func (x *DomainMetadata) GetKeyPemBlock() []byte {
	if x != nil {
		return x.KeyPemBlock
	}
	return nil
}

func (x *DomainMetadata) GetDnsChallengeKey() string {
	if x != nil {
		return x.DnsChallengeKey
	}
	return ""
}

func (x *DomainMetadata) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type DataPersistance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Datetime string            `protobuf:"bytes,1,opt,name=datetime,proto3" json:"datetime,omitempty"`
	User     string            `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	Domains  []*DomainMetadata `protobuf:"bytes,3,rep,name=domains,proto3" json:"domains,omitempty"`
}

func (x *DataPersistance) Reset() {
	*x = DataPersistance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_shiroxy_domains_domain_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataPersistance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataPersistance) ProtoMessage() {}

func (x *DataPersistance) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_shiroxy_domains_domain_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataPersistance.ProtoReflect.Descriptor instead.
func (*DataPersistance) Descriptor() ([]byte, []int) {
	return file_cmd_shiroxy_domains_domain_proto_rawDescGZIP(), []int{1}
}

func (x *DataPersistance) GetDatetime() string {
	if x != nil {
		return x.Datetime
	}
	return ""
}

func (x *DataPersistance) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *DataPersistance) GetDomains() []*DomainMetadata {
	if x != nil {
		return x.Domains
	}
	return nil
}

var File_cmd_shiroxy_domains_domain_proto protoreflect.FileDescriptor

var file_cmd_shiroxy_domains_domain_proto_rawDesc = []byte{
	0x0a, 0x20, 0x63, 0x6d, 0x64, 0x2f, 0x73, 0x68, 0x69, 0x72, 0x6f, 0x78, 0x79, 0x2f, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x73, 0x2f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x04, 0x6d, 0x61, 0x69, 0x6e, 0x22, 0xd4, 0x03, 0x0a, 0x0e, 0x44, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x37, 0x0a, 0x18, 0x61, 0x63, 0x6d, 0x65, 0x5f, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x15, 0x61, 0x63, 0x6d, 0x65, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x17,
	0x0a, 0x07, 0x63, 0x73, 0x72, 0x5f, 0x64, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x06, 0x63, 0x73, 0x72, 0x44, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x62, 0x69,
	0x6e, 0x65, 0x64, 0x5f, 0x63, 0x65, 0x72, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c,
	0x63, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x64, 0x43, 0x65, 0x72, 0x74, 0x12, 0x24, 0x0a, 0x0e,
	0x63, 0x65, 0x72, 0x74, 0x5f, 0x70, 0x65, 0x6d, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x63, 0x65, 0x72, 0x74, 0x50, 0x65, 0x6d, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x12, 0x22, 0x0a, 0x0d, 0x6b, 0x65, 0x79, 0x5f, 0x70, 0x65, 0x6d, 0x5f, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x6b, 0x65, 0x79, 0x50, 0x65,
	0x6d, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x2a, 0x0a, 0x11, 0x64, 0x6e, 0x73, 0x5f, 0x63, 0x68,
	0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x64, 0x6e, 0x73, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x4b,
	0x65, 0x79, 0x12, 0x3e, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0b,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x44, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x1a, 0x3b, 0x0a, 0x0d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x71, 0x0a, 0x0f, 0x44, 0x61, 0x74, 0x61, 0x50, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x12, 0x2e, 0x0a, 0x07, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x44, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x07, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x73, 0x42, 0x17, 0x5a, 0x15, 0x2e, 0x2f, 0x63, 0x6d, 0x64, 0x2f, 0x73, 0x68, 0x69, 0x72,
	0x6f, 0x78, 0x79, 0x2f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_cmd_shiroxy_domains_domain_proto_rawDescOnce sync.Once
	file_cmd_shiroxy_domains_domain_proto_rawDescData = file_cmd_shiroxy_domains_domain_proto_rawDesc
)

func file_cmd_shiroxy_domains_domain_proto_rawDescGZIP() []byte {
	file_cmd_shiroxy_domains_domain_proto_rawDescOnce.Do(func() {
		file_cmd_shiroxy_domains_domain_proto_rawDescData = protoimpl.X.CompressGZIP(file_cmd_shiroxy_domains_domain_proto_rawDescData)
	})
	return file_cmd_shiroxy_domains_domain_proto_rawDescData
}

var file_cmd_shiroxy_domains_domain_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_cmd_shiroxy_domains_domain_proto_goTypes = []any{
	(*DomainMetadata)(nil),  // 0: main.DomainMetadata
	(*DataPersistance)(nil), // 1: main.DataPersistance
	nil,                     // 2: main.DomainMetadata.MetadataEntry
}
var file_cmd_shiroxy_domains_domain_proto_depIdxs = []int32{
	2, // 0: main.DomainMetadata.metadata:type_name -> main.DomainMetadata.MetadataEntry
	0, // 1: main.DataPersistance.domains:type_name -> main.DomainMetadata
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_cmd_shiroxy_domains_domain_proto_init() }
func file_cmd_shiroxy_domains_domain_proto_init() {
	if File_cmd_shiroxy_domains_domain_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_cmd_shiroxy_domains_domain_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*DomainMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_shiroxy_domains_domain_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*DataPersistance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cmd_shiroxy_domains_domain_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cmd_shiroxy_domains_domain_proto_goTypes,
		DependencyIndexes: file_cmd_shiroxy_domains_domain_proto_depIdxs,
		MessageInfos:      file_cmd_shiroxy_domains_domain_proto_msgTypes,
	}.Build()
	File_cmd_shiroxy_domains_domain_proto = out.File
	file_cmd_shiroxy_domains_domain_proto_rawDesc = nil
	file_cmd_shiroxy_domains_domain_proto_goTypes = nil
	file_cmd_shiroxy_domains_domain_proto_depIdxs = nil
}
